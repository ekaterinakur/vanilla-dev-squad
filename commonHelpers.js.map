{"version":3,"file":"commonHelpers.js","sources":["../src/js/rendering/renderFavorites.js","../src/js/eventHandlers/favoritesHandlers.js","../src/js/favorites.js"],"sourcesContent":["import { renderExercise } from \"./renderExercises\";\n\nexport const container = document.querySelector('.favorites-container-list');\n\nexport const renderFavoritesList = (favorites) => {\n  const markup = favorites\n    .map((exercise) => renderExercise(exercise, true))\n    .join('');\n\n  container.innerHTML = markup;\n};\n\nexport const renderFavoritesEmpty = () => {\n  container.innerHTML = `\n\t\t<p class=\"favorites-container-empty\">\n\t\t\tIt appears that you haven't added any exercises to your favorites yet. \n\t\t\tTo get started, you can add exercises that you like to your favorites for easier access in the future.\n\t\t</p>\n\t`;\n};\n\nconst filterBtns = document.querySelector('.pagination-section');\n\nexport function renderPagination(num) {\n  let buttonsHTML = '';\n  for (let i = 1; i <= num; i++) {\n    buttonsHTML += `\n      <button type=\"button\" class=\"pagination-btn untreated${\n        i === 1 ? ' active' : ''\n      }\" data-page=${i}>${i}</button>\n    `;\n  }\n  filterBtns.innerHTML = buttonsHTML;\n}\n\nexport function clearPagination() {\n  filterBtns.innerHTML = \"\";\n}\n\nexport function updatePaginationView(button) {\n  const filterPaginationBtn = filterBtns.querySelectorAll('.pagination-btn');\n  filterPaginationBtn.forEach(btn => btn.classList.remove('active'));\n  button.classList.add('active');\n  const filterWrapper = document.querySelector('.main-title');\n  window.scrollTo({\n    top: filterWrapper.offsetTop,\n    behavior: 'smooth',\n  });\n}","import {\n  clearPagination,\n  container,\n  renderFavoritesEmpty,\n  renderFavoritesList,\n  renderPagination,\n  updatePaginationView,\n} from '../rendering/renderFavorites.js';\nimport { openExerciseDialog, FAVORITES_KEY_LS } from './exerciseHandlers.js';\n\nconst imagesList = document.querySelector('.favorites-container-list');\nlet favorites = [];\nlet currentPageNumber = 1;\nconst itemsPerPage = 8;\n\nexport function initFavorites(shouldUpdatePagination = true) {\n  favorites = JSON.parse(localStorage.getItem(FAVORITES_KEY_LS));\n\n  if (favorites?.length > 0) {\n    if (window.innerWidth >= 1440) {\n      renderFavoritesList(favorites);\n      shouldUpdatePagination && clearPagination();\n    } else {\n      renderFavoritesList(renderPage(currentPageNumber));\n      shouldUpdatePagination && renderPagination(Math.ceil(favorites.length / 8));\n    }\n\n    initFavoritesListeners();\n  } else {\n    renderFavoritesEmpty();\n  }\n}\n\nexport function updateFavorites() {\n  initFavorites(false);\n}\n\nexport function initFavoritesListeners() {\n  const startButtons = container.querySelectorAll('.start-btn');\n  startButtons.forEach(button => {\n    button.addEventListener('click', event => {\n      const exerciseId = event.target.dataset.id;\n      openExerciseDialog(exerciseId, updateFavorites);\n    });\n  });\n\n  const deleteFavoriteButtons = container.querySelectorAll('#deleteFavorite');\n  deleteFavoriteButtons.forEach(button => {\n    button.addEventListener('click', event => {\n      const exerciseId = event.currentTarget.dataset.id;\n      removeFromFavorites(exerciseId);\n    });\n  });\n}\n\nexport function removeFromFavorites(id) {\n  const foundIndex = favorites.findIndex(ex => ex._id === id);\n\n  if (foundIndex !== -1) {\n    favorites.splice(foundIndex, 1);\n  }\n\n  localStorage.setItem(FAVORITES_KEY_LS, JSON.stringify(favorites));\n\n  updateFavorites();\n}\n\nexport async function handleFiltersPagination(event) {\n  if (event.target.classList.contains('pagination-btn')) {\n    resetFilterView();\n    const pageBtn = event.target;\n    currentPageNumber = pageBtn.dataset.page;\n    updateFavorites();\n\n    updatePaginationView(pageBtn);\n  }\n}\n\nexport function resetFilterView(resetAll) {\n  imagesList.innerHTML = '';\n  if (resetAll) {\n    filterBtns.innerHTML = '';\n  }\n}\n\nfunction renderPage(pageNumber) {\n  let startIndex = (pageNumber - 1) * itemsPerPage;\n  if (startIndex > favorites.length - 1) {\n    currentPageNumber = pageNumber = pageNumber - 1;\n    startIndex = (currentPageNumber - 1) * itemsPerPage;\n    renderPagination(Math.ceil(favorites.length / 8));\n  }\n  const endIndex = startIndex + itemsPerPage;\n  const currentPageItems = favorites.slice(startIndex, endIndex);\n\n  return currentPageItems;\n}\n","import { toggleHeaderEventListeners } from './eventHandlers/headerHandlers.js';\nimport { filterQuoteLS } from './eventHandlers/filtersHandlers.js';\nimport { initFavorites, handleFiltersPagination } from './eventHandlers/favoritesHandlers.js';\n\n\nconst filterPagination = document.querySelector('.pagination-section');\n\nfilterPagination.addEventListener('click', handleFiltersPagination);\n\nwindow.addEventListener('resize', () => {\n  // Header Listening for window resize events - hide burger menu on larger screens\n  toggleHeaderEventListeners();\n  initFavorites();\n});\n\ntoggleHeaderEventListeners();\n\nfilterQuoteLS();\n\ninitFavorites();\n"],"names":["container","renderFavoritesList","favorites","markup","exercise","renderExercise","renderFavoritesEmpty","filterBtns","renderPagination","num","buttonsHTML","i","clearPagination","updatePaginationView","button","btn","filterWrapper","imagesList","currentPageNumber","itemsPerPage","initFavorites","shouldUpdatePagination","FAVORITES_KEY_LS","renderPage","initFavoritesListeners","updateFavorites","event","exerciseId","openExerciseDialog","removeFromFavorites","id","foundIndex","ex","handleFiltersPagination","resetFilterView","pageBtn","resetAll","pageNumber","startIndex","endIndex","filterPagination","toggleHeaderEventListeners","filterQuoteLS"],"mappings":"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"}