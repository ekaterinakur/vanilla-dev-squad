{"version":3,"file":"commonHelpers.js","sources":["../src/js/rendering/renderFavorites.js","../src/js/eventHandlers/favoritesHandlers.js","../src/js/favorites.js"],"sourcesContent":["import { renderExercise } from \"./renderExercises\";\n\nexport const container = document.querySelector('.favorites-container-list');\n\nexport const renderFavoritesList = (favorites) => {\n  const markup = favorites\n    .map((exercise) => renderExercise(exercise, true))\n    .join('');\n\n  container.innerHTML = markup;\n};\n\nexport const renderFavoritesEmpty = () => {\n  container.innerHTML = `\n\t\t<p class=\"favorites-container-empty\">\n\t\t\tIt appears that you haven't added any exercises to your favorites yet. \n\t\t\tTo get started, you can add exercises that you like to your favorites for easier access in the future.\n\t\t</p>\n\t`;\n};\n","import {\n  container,\n  renderFavoritesEmpty,\n  renderFavoritesList,\n} from '../rendering/renderFavorites.js';\nimport { openExerciseDialog, FAVORITES_KEY_LS } from './exerciseHandlers.js';\n\nlet favorites = [];\n\nexport function initFavorites() {\n  favorites = JSON.parse(localStorage.getItem('favorites'));\n\n  if (favorites?.length > 0) {\n    renderFavoritesList(favorites);\n  } else {\n    renderFavoritesEmpty();\n  }\n\n  const startButtons = container.querySelectorAll('.start-btn');\n  startButtons.forEach(button => {\n    button.addEventListener('click', event => {\n      const exerciseId = event.target.dataset.id;\n      openExerciseDialog(exerciseId, initFavorites);\n    });\n  });\n\n  const deleteFavoriteButtons = container.querySelectorAll('#deleteFavorite');\n  deleteFavoriteButtons.forEach(button => {\n    button.addEventListener('click', event => {\n      const exerciseId = event.currentTarget.dataset.id;\n      removeFromFavorites(exerciseId);\n    });\n  });\n}\n\nexport function removeFromFavorites(id) {\n  const foundIndex = favorites.findIndex(ex => ex._id === id);\n\n  if (foundIndex !== -1) {\n    favorites.splice(foundIndex, 1);\n  }\n\n  localStorage.setItem(FAVORITES_KEY_LS, JSON.stringify(favorites));\n\n\tinitFavorites();\n}\n","import { toggleHeaderEventListeners } from './eventHandlers/headerHandlers.js';\nimport { filterQuoteLS } from './eventHandlers/filtersHandlers.js';\nimport { initFavorites } from './eventHandlers/favoritesHandlers.js';\n\nwindow.addEventListener('resize', () => {\n  // Header Listening for window resize events - hide burger menu on larger screens\n  toggleHeaderEventListeners();\n});\n\ntoggleHeaderEventListeners();\n\nfilterQuoteLS();\n\ninitFavorites();\n"],"names":["container","renderFavoritesList","favorites","markup","exercise","renderExercise","renderFavoritesEmpty","initFavorites","button","event","exerciseId","openExerciseDialog","removeFromFavorites","id","foundIndex","ex","FAVORITES_KEY_LS","toggleHeaderEventListeners","filterQuoteLS"],"mappings":"oHAEO,MAAMA,EAAY,SAAS,cAAc,2BAA2B,EAE9DC,EAAuBC,GAAc,CAChD,MAAMC,EAASD,EACZ,IAAKE,GAAaC,EAAeD,EAAU,EAAI,CAAC,EAChD,KAAK,EAAE,EAEVJ,EAAU,UAAYG,CACxB,EAEaG,EAAuB,IAAM,CACxCN,EAAU,UAAY;AAAA;AAAA;AAAA;AAAA;AAAA,EAMxB,ECZA,IAAIE,EAAY,CAAA,EAET,SAASK,GAAgB,CAC9BL,EAAY,KAAK,MAAM,aAAa,QAAQ,WAAW,CAAC,GAEpDA,GAAA,YAAAA,EAAW,QAAS,EACtBD,EAAoBC,CAAS,EAE7BI,IAGmBN,EAAU,iBAAiB,YAAY,EAC/C,QAAQQ,GAAU,CAC7BA,EAAO,iBAAiB,QAASC,GAAS,CACxC,MAAMC,EAAaD,EAAM,OAAO,QAAQ,GACxCE,EAAmBD,EAAYH,CAAa,CAClD,CAAK,CACL,CAAG,EAE6BP,EAAU,iBAAiB,iBAAiB,EACpD,QAAQQ,GAAU,CACtCA,EAAO,iBAAiB,QAASC,GAAS,CACxC,MAAMC,EAAaD,EAAM,cAAc,QAAQ,GAC/CG,EAAoBF,CAAU,CACpC,CAAK,CACL,CAAG,CACH,CAEO,SAASE,EAAoBC,EAAI,CACtC,MAAMC,EAAaZ,EAAU,UAAUa,GAAMA,EAAG,MAAQF,CAAE,EAEtDC,IAAe,IACjBZ,EAAU,OAAOY,EAAY,CAAC,EAGhC,aAAa,QAAQE,EAAkB,KAAK,UAAUd,CAAS,CAAC,EAEjEK,GACD,CCzCA,OAAO,iBAAiB,SAAU,IAAM,CAEtCU,GACF,CAAC,EAEDA,IAEAC,IAEAX,EAAe"}